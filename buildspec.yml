version: 0.2Add commentMore actions

env:
  variables:
    ImageName: container-test-app
    ECR_REGISTRY: 190623961150.dkr.ecr.us-east-1.amazonaws.com
    ECR_REPOSITORY: test-ecr

    ECR_REPO_NAME: cth-ripo
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
      - echo "hello"
      
      #ECR login
      - ECR_MAIN_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_MAIN_URI}

      - ECR_IMAGE_URI="${ECR_MAIN_URI}/${ECR_REPO_NAME}:latest"
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $ImageName .
      - docker tag $ImageName:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - docker build -t ${ECR_REPO_NAME}:latest .
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - echo Build completed on `date`
      - echo Creating imagedefinitions.json...
      - |
        echo '[
          {
            "name": "'"$ImageName"'",
            "imageUri": "'"$ECR_REGISTRY/$ECR_REPOSITORY:latest"'"
          }
        ]' > imagedefinitions.json
      - echo imagedefinitions.json created.

artifacts:
  files:
    - imagedefinitions.json

      - docker tag ${ECR_REPO_NAME}:latest ${ECR_IMAGE_URI}
      - docker push ${ECR_IMAGE_URI}
